{
  "comments": [
    {
      "key": {
        "uuid": "0a4ddf0f_15ff8455",
        "filename": "JniInvocation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2016-01-06T21:47:49Z",
      "side": 1,
      "message": "Shouldn\u0027t this be:\n\nif (__system_property_get(..) \u003d\u003d 0) {\n  strcpy(debuggable, kDebuggableFallback);\n}",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 23
      },
      "revId": "6bc946f3d5e94826037325c943787a4c8e952ede",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a1aaf01_06d8c416",
        "filename": "JniInvocation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-01-06T21:50:40Z",
      "side": 1,
      "message": "it should work without it; when the functions returns 0 the debuggable is set to \"\\0\".",
      "parentUuid": "0a4ddf0f_15ff8455",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 23
      },
      "revId": "6bc946f3d5e94826037325c943787a4c8e952ede",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a481bfe_121d5cf7",
        "filename": "JniInvocation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2016-01-06T21:57:42Z",
      "side": 1,
      "message": "lgtm.",
      "parentUuid": "8a1aaf01_06d8c416",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 23
      },
      "revId": "6bc946f3d5e94826037325c943787a4c8e952ede",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a2c372e_98f3d98e",
        "filename": "JniInvocation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2016-01-06T21:58:03Z",
      "side": 1,
      "message": "All of this code relates to the ability to switch between ART and Dalvik (which was obsolete as of Lollipop). Not sure if it serves any other useful purpose.",
      "parentUuid": "8a1aaf01_06d8c416",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 23
      },
      "revId": "6bc946f3d5e94826037325c943787a4c8e952ede",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a1aaf01_e644b053",
        "filename": "JniInvocation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-01-06T22:14:52Z",
      "side": 1,
      "message": "should I remove this method and just use libart.so instead?",
      "parentUuid": "4a2c372e_98f3d98e",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 23
      },
      "revId": "6bc946f3d5e94826037325c943787a4c8e952ede",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa3e9347_8f7e21bb",
        "filename": "JniInvocation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-06T22:38:47Z",
      "side": 1,
      "message": "Nooooo!\n\nThis is also used to switch to libartd...\n\nCleanup is welcome, I did some minimal adaptation of it before. I think if you make this a proper std::string output etc nobody would mind. That minimal startup performance gain of having the char[] in the parent is horrible and I should have never done it.",
      "parentUuid": "8a1aaf01_e644b053",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 23
      },
      "revId": "6bc946f3d5e94826037325c943787a4c8e952ede",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a2b8319_f791ba3b",
        "filename": "JniInvocation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2016-01-06T22:58:41Z",
      "side": 1,
      "message": "Oops, not sure how i missed that. I guess I didn\u0027t expect that logic in libnativehelper but i don\u0027t think there\u0027s anywhere else we can put it.",
      "parentUuid": "aa3e9347_8f7e21bb",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 23
      },
      "revId": "6bc946f3d5e94826037325c943787a4c8e952ede",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa3e9347_4f9c992d",
        "filename": "JniInvocation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-06T23:04:37Z",
      "side": 1,
      "message": "The logic is here because JniInvocation is used to start a runtime (and is used by app_process, thus). It\u0027s the \"We don\u0027t like to read system properties in ART\" thingy... :-)",
      "parentUuid": "2a2b8319_f791ba3b",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 23
      },
      "revId": "6bc946f3d5e94826037325c943787a4c8e952ede",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}