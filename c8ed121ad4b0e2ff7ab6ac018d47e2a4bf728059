{
  "comments": [
    {
      "key": {
        "uuid": "2d94b729_3f2f5652",
        "filename": "tests/ScopedLocalRef_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-11T20:07:52Z",
      "side": 1,
      "message": "nit: It\u0027s cleaner to override ::testing::Environment\n\nhttps://github.com/google/googletest/blob/master/googletest/docs/AdvancedGuide.md#global-set-up-and-tear-down",
      "revId": "c8ed121ad4b0e2ff7ab6ac018d47e2a4bf728059",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b041ba63_fa8205e7",
        "filename": "tests/ScopedLocalRef_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-09-11T21:49:56Z",
      "side": 1,
      "message": "I think this raises the question of test design - because how do I get the library name from a test class to the environment class?",
      "parentUuid": "2d94b729_3f2f5652",
      "revId": "c8ed121ad4b0e2ff7ab6ac018d47e2a4bf728059",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "861481e6_5355c788",
        "filename": "tests/ScopedLocalRef_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-11T21:58:45Z",
      "side": 1,
      "message": "Seems unrelated to the original comment, is this a separate question?",
      "parentUuid": "b041ba63_fa8205e7",
      "revId": "c8ed121ad4b0e2ff7ab6ac018d47e2a4bf728059",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f975954e_96270858",
        "filename": "tests/ScopedLocalRef_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-11T20:07:52Z",
      "side": 1,
      "message": "This seems like it should be in TearDown()?",
      "revId": "c8ed121ad4b0e2ff7ab6ac018d47e2a4bf728059",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16bc18fe_43d2ef72",
        "filename": "tests/ScopedLocalRef_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-11T20:07:52Z",
      "side": 1,
      "message": "Why do we need this on device?",
      "revId": "c8ed121ad4b0e2ff7ab6ac018d47e2a4bf728059",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9101004_f44d59dc",
        "filename": "tests/ScopedLocalRef_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-09-11T21:49:56Z",
      "side": 1,
      "message": "You don\u0027t need either on device (assuming the device is default-configured). You don\u0027t need noimage-dex2oat on the host, either, but compiling a boot image is just superfluous work here that slows down the test significantly. (Note that I did not want to add dependencies for a core image...)",
      "parentUuid": "16bc18fe_43d2ef72",
      "revId": "c8ed121ad4b0e2ff7ab6ac018d47e2a4bf728059",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "964c3352_3e2f7645",
        "filename": "tests/ScopedLocalRef_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-09T16:53:32Z",
      "side": 1,
      "message": "All that stuff is super complicated, can you extract to make it easier to configure a standalone art in a gtest?",
      "revId": "c8ed121ad4b0e2ff7ab6ac018d47e2a4bf728059",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "704d222a_ceb6e567",
        "filename": "tests/ScopedLocalRef_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-09-10T18:49:20Z",
      "side": 1,
      "message": "Maybe you didn\u0027t notice, but this is already the ARTScopedLocalRefTest... :-)\n\nI\u0027d like to merge this to get my fixes actually tested, and then see about refactoring. I\u0027m wondering whether we should expose a header library in ART for those purposes?\n\nSo I\u0027d rather focus here on what the right setup is. Should the base test class (with SetUp and TearDown) actually be parameterized so it\u0027s easier to configure tests against both ART and RI (not with the \"using ConfiguredTest\" in line 286).",
      "parentUuid": "964c3352_3e2f7645",
      "revId": "c8ed121ad4b0e2ff7ab6ac018d47e2a4bf728059",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cdf631c_899505bd",
        "filename": "tests/ScopedLocalRef_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-11T20:07:52Z",
      "side": 1,
      "message": "Yes but it could be more like a DalvikVMTest, ARTTest, etc?\n\nand yes I agree we should just have something like libdalvikvm.so to allow anyone to launch it with just writing standard JNI without anything ART-specific.",
      "parentUuid": "704d222a_ceb6e567",
      "revId": "c8ed121ad4b0e2ff7ab6ac018d47e2a4bf728059",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d19b2185_e8f1975e",
        "filename": "tests/ScopedLocalRef_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-11T21:58:45Z",
      "side": 1,
      "message": "Also this is supposed to be shipped with NDK, so it\u0027s probably better to avoid ART-isms since its also supposed to work with Dalvik.",
      "parentUuid": "7cdf631c_899505bd",
      "revId": "c8ed121ad4b0e2ff7ab6ac018d47e2a4bf728059",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde0786f_02c19625",
        "filename": "tests/ScopedLocalRef_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-11T21:58:45Z",
      "side": 1,
      "message": "You should get this during build, not with getenv (or figure it out at runtime from a relative path to this binary). It won\u0027t be set outside of makefile system because they don\u0027t run envsetup.sh on build servers.\n\nTry starting a new shell and seeing if tests will pass with just make command and then running the binary by hand (without running envsetup.sh).\n\nIf this gtest is *dependent* on envsetup then there should probably be a script or makefile target, but I really don\u0027t recommend doing that for something this simple.",
      "revId": "c8ed121ad4b0e2ff7ab6ac018d47e2a4bf728059",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d927255b_c65286f8",
        "filename": "tests/ScopedLocalRef_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-11T20:07:52Z",
      "side": 1,
      "message": "Don\u0027t do this, get the path from the build instead, can easily be done at compile time.",
      "revId": "c8ed121ad4b0e2ff7ab6ac018d47e2a4bf728059",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}